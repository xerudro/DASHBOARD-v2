package layouts

import "github.com/vip-hosting/panel-v2/internal/models"

templ Base(user *models.User, title string) {
	<!DOCTYPE html>
	<html lang="en" class="dark">
		<head>
			<meta charset="UTF-8"/>
			<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
			<title>{ title } - HostPanel</title>
			
			<!-- Tailwind CSS -->
			<link rel="stylesheet" href="/static/css/output.css"/>
			
			<!-- HTMX -->
			<script src="https://unpkg.com/htmx.org@1.9.10"></script>
			<script src="https://unpkg.com/htmx.org@1.9.10/dist/ext/sse.js"></script>
			
			<!-- Alpine.js -->
			<script defer src="https://unpkg.com/alpinejs@3.13.3/dist/cdn.min.js"></script>
			
			<!-- Lucide Icons -->
			<script src="https://unpkg.com/lucide@latest"></script>
			
			<style>
				[x-cloak] { display: none !important; }
			</style>
		</head>
		<body class="bg-dark-900 text-gray-100" x-data="{ darkMode: true, sidebarOpen: true }">
			<!-- Sidebar -->
			<aside class="sidebar scrollbar-thin">
				<div class="flex flex-col h-full">
					<!-- Logo -->
					<div class="flex items-center gap-3 px-4 py-6 border-b border-dark-700">
						<div class="w-10 h-10 bg-gradient-to-br from-primary-500 to-orange-600 rounded-lg flex items-center justify-center">
							<i data-lucide="server" class="w-6 h-6 text-white"></i>
						</div>
						<span class="text-xl font-bold text-white">HostPanel</span>
					</div>
					
					<!-- Menu Label -->
					<div class="px-4 pt-6 pb-2">
						<span class="text-xs font-semibold text-gray-500 uppercase tracking-wider">Menu</span>
					</div>
					
					<!-- Navigation -->
					<nav class="flex-1 px-2 py-2 space-y-1 overflow-y-auto scrollbar-thin">
						@SidebarItem("/dashboard", "layout-dashboard", "Dashboard", true)
						@SidebarItem("/servers", "server", "Servers", false)
						@SidebarItem("/automation", "bot", "Server Automation", false)
						@SidebarItem("/packages", "package", "Hosting Packages", false)
						@SidebarItem("/vps", "cloud", "VPS", false)
						@SidebarItem("/analytics", "bar-chart-2", "Analytics", false)
						@SidebarItem("/websites", "globe", "Websites", false)
						@SidebarItem("/databases", "database", "Databases", false)
						@SidebarItem("/email", "mail", "Email", false)
						@SidebarItem("/dns", "globe-2", "DNS Settings", false)
						@SidebarItem("/backups", "hard-drive", "Backups", false)
						@SidebarItem("/security", "shield", "Security", false)
						@SidebarItem("/users", "users", "Users", false)
						@SidebarItem("/clients", "user-check", "Clients", false)
						@SidebarItem("/billing", "credit-card", "Billing", false)
						@SidebarItem("/logs", "file-text", "Logs", false)
						@SidebarItem("/settings", "settings", "Settings", false)
					</nav>
					
					<!-- User Section -->
					<div class="border-t border-dark-700 p-4">
						<div class="flex items-center gap-3">
							<img 
								src={ "/api/avatar/" + user.Email } 
								alt={ user.Name }
								class="w-10 h-10 rounded-full bg-dark-700"
							/>
							<div class="flex-1 min-w-0">
								<p class="text-sm font-medium text-white truncate">{ user.Name }</p>
								<p class="text-xs text-gray-500">{ user.Role }</p>
							</div>
							<button 
								class="p-2 text-gray-400 hover:text-white hover:bg-dark-700 rounded-lg transition-colors"
								@click="darkMode = !darkMode; document.documentElement.classList.toggle('dark')"
								title="Toggle theme"
							>
								<i data-lucide="sun" class="w-5 h-5"></i>
							</button>
							<button 
								class="p-2 text-gray-400 hover:text-white hover:bg-dark-700 rounded-lg transition-colors"
								hx-post="/auth/logout"
								hx-confirm="Are you sure you want to logout?"
								title="Logout"
							>
								<i data-lucide="log-out" class="w-5 h-5"></i>
			</button>
						</div>
					</div>
				</div>
			</aside>
			
			<!-- Main Content -->
			<main class="ml-64 min-h-screen">
				<!-- Top Navigation Bar -->
				<header class="bg-dark-800 border-b border-dark-700 sticky top-0 z-30">
					<div class="flex items-center justify-between px-6 py-4">
						<button 
							class="lg:hidden p-2 text-gray-400 hover:text-white hover:bg-dark-700 rounded-lg"
							@click="sidebarOpen = !sidebarOpen"
						>
							<i data-lucide="menu" class="w-6 h-6"></i>
						</button>
						
						<div class="flex items-center gap-4 ml-auto">
							<!-- Language Selector -->
							<button class="flex items-center gap-2 px-3 py-2 text-sm text-gray-400 hover:text-white hover:bg-dark-700 rounded-lg transition-colors">
								<i data-lucide="globe" class="w-4 h-4"></i>
								<span>us English</span>
							</button>
							
							<!-- Theme Toggle -->
							<button 
								class="flex items-center gap-2 px-3 py-2 text-sm text-gray-400 hover:text-white hover:bg-dark-700 rounded-lg transition-colors"
								@click="darkMode = !darkMode; document.documentElement.classList.toggle('dark')"
							>
								<i data-lucide="sun" class="w-4 h-4" x-show="darkMode"></i>
								<i data-lucide="moon" class="w-4 h-4" x-show="!darkMode" x-cloak></i>
								<span x-text="darkMode ? 'Light mode' : 'Dark mode'"></span>
							</button>
						</div>
					</div>
				</header>
				
				<!-- Page Content -->
				<div class="p-6">
					{ children... }
				</div>
			</main>
			
			<!-- Toast Container -->
			<div id="toast-container" class="fixed bottom-6 right-6 z-50 space-y-4"></div>
			
			<!-- Initialize Lucide Icons -->
			<script>
				lucide.createIcons();
				
				// HTMX event listeners
				document.body.addEventListener('htmx:afterSwap', function() {
					lucide.createIcons();
				});
				
				// Toast notification function
				window.showToast = function(message, type = 'info') {
					const container = document.getElementById('toast-container');
					const toast = document.createElement('div');
					toast.className = `toast toast-${type} animate-slide-in`;
					toast.innerHTML = `
						<div class="flex items-start gap-3">
							<div class="flex-shrink-0">
								${type === 'success' ? '<i data-lucide="check-circle" class="w-5 h-5 text-green-500"></i>' : ''}
								${type === 'error' ? '<i data-lucide="x-circle" class="w-5 h-5 text-red-500"></i>' : ''}
								${type === 'warning' ? '<i data-lucide="alert-triangle" class="w-5 h-5 text-orange-500"></i>' : ''}
								${type === 'info' ? '<i data-lucide="info" class="w-5 h-5 text-blue-500"></i>' : ''}
							</div>
							<div class="flex-1">
								<p class="text-sm font-medium text-white">${message}</p>
							</div>
							<button onclick="this.parentElement.parentElement.remove()" class="text-gray-400 hover:text-white">
								<i data-lucide="x" class="w-4 h-4"></i>
							</button>
						</div>
					`;
					container.appendChild(toast);
					lucide.createIcons();
					
					setTimeout(() => {
						toast.style.opacity = '0';
						setTimeout(() => toast.remove(), 300);
					}, 5000);
				};
			</script>
		</body>
	</html>
}

templ SidebarItem(href string, icon string, label string, active bool) {
	<a 
		href={ templ.SafeURL(href) }
		class={ "sidebar-item", templ.KV("active", active) }
	>
		<i data-lucide={ icon } class="w-5 h-5 flex-shrink-0"></i>
		<span class="flex-1">{ label }</span>
	</a>
}
